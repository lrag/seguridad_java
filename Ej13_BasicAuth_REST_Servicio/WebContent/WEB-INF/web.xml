<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>Ej13_BasicAuth_REST_Servicio</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<!-- Filtro cross origin proporcionado por Tomcat -->
	<!-- 
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
		<init-param>
			<param-name>cors.allowed.origins</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE,PATCH</param-value>
		</init-param>
		<init-param>
			<param-name>cors.allowed.headers</param-name>
			<param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposed.headers</param-name>
			<param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
		</init-param>
		<init-param>
			<param-name>cors.support.credentials</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>cors.preflight.maxage</param-name>
			<param-value>10</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
	
	<!-- 
	Configuracion de un realm jdbc
	Esta configuración propietaria de Tomcat iría en META-INF/context.xml
	
	create table users (
		user_name         varchar(15) not null primary key,
		user_pass         varchar(15) not null
		enabled boolean
	);

	create table user_roles (
		user_name         varchar(15) not null,
		role_name         varchar(15) not null,
		primary key (user_name, role_name)
	);

	<Realm className="org.apache.catalina.realm.JDBCRealm"
      	   driverName="org.gjt.mm.mysql.Driver"
   	       connectionURL="jdbc:mysql://localhost/authority?user=dbuser&amp;password=dbpass"
           userTable="users" userNameCol="user_name" userCredCol="user_pass"
           userRoleTable="user_roles" roleNameCol="role_name"/>
	-->

	<!-- 
	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>Basic Authentication</realm-name>
	</login-config>
	<!- - 
	las constraint van a definir lo que queremos establecer
	como securizado, es decir que se necesite el user y el pass
	en la cabecera , esto securizara los js y css
	- ->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Public</web-resource-name>
			<description>Matches a few special pages.</description>
			<url-pattern>/js/*</url-pattern>
			<url-pattern>/css/*</url-pattern>
		</web-resource-collection>
	</security-constraint>
	<!- - 
	Aqui vamos a securizar cualquier URL con los http metodos
	correspondientes
	- ->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>All Resources</web-resource-name>
			<url-pattern>/*</url-pattern>
			<http-method>GET</http-method>
			<http-method>POST</http-method>
			<http-method>PUT</http-method>
			<http-method>DELETE</http-method>
			<http-method>PATCH</http-method>
			<http-method>HEAD</http-method>
		</web-resource-collection>
		<!- - 
		y el rol que tienen que tener los usuarios para acceder
		- ->
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>usr</role-name>
		</auth-constraint>
	</security-constraint>
	<!- - 
	tambien definimos los roles
	- ->
	<security-role>
		<role-name>admin</role-name>
	</security-role>
	<security-role>
		<role-name>usr</role-name>
	</security-role>
	-->

</web-app>